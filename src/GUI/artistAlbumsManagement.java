/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.*;

/**
 *
 * @author sotos
 */
public class artistAlbumsManagement extends javax.swing.JFrame {
    private EntityManager em;
    int s;
    Album al;
    SimpleDateFormat sdf = new SimpleDateFormat("d MMM yyyy");
    SimpleDateFormat stf = new SimpleDateFormat("mm:ss");
    Boolean newpressed;
    private DefaultTableModel model;
    private List<Album> albumList1 = new ArrayList<>();  //καλάθι

    /**
     * Creates new form artistAlbumsManagement
     */
    public artistAlbumsManagement() {
        em = DBManager.em;
        if (!em.getTransaction().isActive()) {
            em.getTransaction().begin();
        }
        initComponents();
        setalbumlist();
        setJTable(jTable1, albumList1);
        // Αλλαγή του τρόπου που κλέινει το παράθυρο με το x
        super.addWindowListener(new java.awt.event.WindowAdapter(){
            @Override
            public void windowClosing(java.awt.event.WindowEvent windowEvent) {
            new mainGUI().setVisible(true);
        }
        });
        checkControls();
    }

    // Δημιουργία της λίστας των album
    private void setalbumlist(){
        try {            
            this.albumList1.clear();
                TypedQuery<Album> albumsQuery = em.createQuery("SELECT a FROM Album a", Album.class);
                    for (Album a:albumsQuery.getResultList()){
                        if (a.getArtistList().size()>0) { // εάν το album είναι τραγουδιστή
                        this.albumList1.add(a); // προσθέτει το album στη λίστα
                    }
                }                    
        } catch (Exception e) { // Σε περίπτωση αποτυχίας τυπώνει σφάλμα
            System.out.println("ERROR:¨1"+e.getMessage());
        }           
    }
    
    // Μέθοδος πρόσθεσης κατάλληλα διαμορφωμένων γραμμών στον πίνακα
    private void setJTable(javax.swing.JTable jTable, List<Album> obj) {
        //Μεταβλητές
        Long tmpArtistId;
        String tmpArtistName;
        
        model = (DefaultTableModel) jTable.getModel(); //Χαρακτηριστικά του πίνακα της φόρμας
                
        for (Album a : obj) {
            tmpArtistId = a.getArtistList().get(0).getArtistId();
            TypedQuery<Artist> artistQuery = em.createQuery("SELECT a FROM Artist a WHERE a.artistId = :artistId", Artist.class).setParameter("artistId", tmpArtistId);
            Artist t = artistQuery.getSingleResult();
            tmpArtistName = t.getFirstname() + " " + t.getLastname();

            //Τοποθετεί στον πίνακα τις πληροφορίες των album
            model.addRow(new Object[]{a.getTitle(),a.getType(),a.getMusicproductioncompanycompanyId().getName(),a.getDisknumber(), tmpArtistName, sdf.format(a.getReleasedate())});//εδώ απλά εφαρμόζω την μέθοδο format του SimpleDateFormat που δημιούργησα στην αρχή.
        }
     }
    private void checkControls() {
        s = jTable1.getSelectedRow();
        jButton2.setEnabled(s >= 0);
        jButton3.setEnabled(s >= 0);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Πίνακας Άλμπουμ Καλλιτεχνών");
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/vinyl_32_32.png"))); // NOI18N
        jLabel1.setText("Άλμπουμ Καλλιτεχνών");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Τίτλος", "Τύπος άλμπουμ", "Εταιρεία παραγωγής", "Αριθμός άλμπουμ", "Καλλιτέχνης", "Ημερομηνία κυκλοφορίας"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setFocusable(false);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTable1KeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(200);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(200);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(110);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(200);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(150);
        }

        jButton1.setText("Εισαγωγή νέου");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Διαγραφή");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Μεταβολή");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Έξοδος");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 979, Short.MAX_VALUE)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 302, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.dispose();
        new mainGUI().setVisible(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        al = new Album();
        al.setTitle("");
        al.setType("");
        al.setMusicproductioncompanycompanyId(null);
        al.setDisknumber(null);
        al.setArtistList(null);
        al.setReleasedate(null);
        al.setSongList(null);
        
        newpressed = true;
        
        artistAlbumsManagementForm aamf = new artistAlbumsManagementForm(al, newpressed);
        aamf.setVisible(true);
        JFrame thisframe = this;
        thisframe.setEnabled(false);
        
        aamf.addWindowListener(new WindowListener(){
            
            @Override
            public void windowClosed(WindowEvent arg0) {
                if (MyWindowEvent.isExitAndSave(arg0)){
                    em.persist(al);
                    albumList1.add(al);
                    int row = albumList1.size() - 1;
                    jTable1.setRowSelectionInterval(row, row);
                    jTable1.scrollRectToVisible(jTable1.getCellRect(row, 0, true));
                    em.getTransaction().commit();
                    em.getTransaction().begin();
                }
                else{
                    
                }
                thisframe.setEnabled(true);
                checkControls();
            }
            
            @Override
            public void windowOpened(WindowEvent e) {
                System.out.println("Window Opened");
            }

            @Override
            public void windowClosing(WindowEvent e) {
                System.out.println("Window Closing");
                thisframe.setEnabled(true);
            }

            @Override
            public void windowIconified(WindowEvent e) {
                System.out.println("Window Iconified");
            }

            @Override
            public void windowDeiconified(WindowEvent e) {
                System.out.println("Window Deiconified");
            }

            @Override
            public void windowActivated(WindowEvent e) {
                System.out.println("Window Activated");
            }

            @Override
            public void windowDeactivated(WindowEvent e) {
                System.out.println("Window Deactivated");
                thisframe.setEnabled(true);
            }
            
        });
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        s = jTable1.getSelectedRow();
        al = albumList1.get(s);
        newpressed = false;
        
        artistAlbumsManagementForm aamf = new artistAlbumsManagementForm(al, newpressed);
        aamf.setVisible(true);
        JFrame thisframe = this;
        thisframe.setEnabled(false);
        
        aamf.addWindowListener(new WindowListener(){
        
            @Override
            public void windowClosed(WindowEvent arg0) {
                if (MyWindowEvent.isExitAndSave(arg0)){
                    em.merge(al);
                    albumList1.set(s, al);
                    em.getTransaction().commit();
                    em.getTransaction().begin();
                    model.getDataVector().removeAllElements();
                    model.fireTableDataChanged(); // notifies the JTable that the model has changed
                    setJTable(jTable1, albumList1);
                    
                }
                else{
                    em.getTransaction().rollback();
                    em.getTransaction().begin();
                    //java.util.Collection data = em.createQuery("SELECT a FROM Album a", Album.class).getResultList();
                    setalbumlist();
                    for (Album entity : albumList1){
                    em.refresh(entity);
                    }
                    //albumList1.clear();
                   //albumList1.addAll(data);
                }
                thisframe.setEnabled(true);
                checkControls();
            }
            
            @Override
            public void windowOpened(WindowEvent e) {
                System.out.println("Window Opened");
            }

            @Override
            public void windowClosing(WindowEvent e) {
                System.out.println("Window Closing");
                thisframe.setEnabled(true);
            }

            @Override
            public void windowIconified(WindowEvent e) {
                System.out.println("Window Iconified");
            }

            @Override
            public void windowDeiconified(WindowEvent e) {
                System.out.println("Window Deiconified");
            }

            @Override
            public void windowActivated(WindowEvent e) {
                System.out.println("Window Activated");
            }

            @Override
            public void windowDeactivated(WindowEvent e) {
                System.out.println("Window Deactivated");
                thisframe.setEnabled(true);
            }
        });

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTable1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1KeyTyped

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
         checkControls();
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    s = jTable1.getSelectedRow();
         al = albumList1.get(s);
        Object[] options = {"Διαγραφή", "Ακύρωση"};
        int n = JOptionPane.showOptionDialog(this, "Θέλετε να διαγράψετε το άλμπουμ " + al.getTitle(),
                "Επιβεβαίωση Διαγραφής",
                JOptionPane.OK_CANCEL_OPTION, 
                JOptionPane.QUESTION_MESSAGE,
                null,
                options,
                options[1]);
        
        if(n == 0){
            em.remove(al);
            albumList1.remove(al);
            em.getTransaction().commit();
            em.getTransaction().begin();
            model.getDataVector().removeAllElements();
            model.fireTableDataChanged(); // notifies the JTable that the model has changed
            setJTable(jTable1, albumList1);
            checkControls();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
